// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Description for showdownjs",
    "title": "showdownjs",
    "version": "1.0.0",
    "x-direktiv-meta": {
      "category": "Unknown",
      "container": "direktiv/showdownjs",
      "issues": null,
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This is a longer description for the application showdownjs",
      "maintainer": null,
      "url": null
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Scope of the saved html output within the scope.",
                  "type": "string",
                  "example": "myhtml"
                },
                "scope": {
                  "description": "Scope of the saved html output. If empty result will be returned as base64.",
                  "type": "string",
                  "enum": [
                    "workflow",
                    "namespace",
                    "instance"
                  ],
                  "example": "instance"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "nice greeting",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "example": {
                "greeting": "Hello YourName"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "{{- $v := \"out.md\" }}\n{{- if and (not (empty .Scope)) (not (empty .Name)) }}\n  {{- $v = (list \"out\" .Scope .Name | join \"/\") }}\n{{- end }}\nshowdown makehtml --input input.md --output {{ $v }} \\\n  -c strikethrough \\\n  -c omitExtraWLInCodeBlocks \\\n  -c simplifiedAutoLink \\\n  -c literalMidWordUnderscores \\\n  -c tables \\\n  -c tablesHeaderId \\\n  -c ghCodeBlocks \\\n  -c tasklists \\\n  -c disableForced4SpacesIndentedSublists \\\n  -c simpleLineBreaks \\\n  -c requireSpaceBeforeHeadingText \\\n  -c ghCompatibleHeaderId \\\n  -c ghMentions \\\n  -c backslashEscapesHTMLTags \\\n  -c emoji \\\n  -c splitAdjacentBlockquotes "
            },
            {
              "action": "exec",
              "exec": "{{- $v := \"out.md\" }}\n{{- if and (not (empty .Scope)) (not (empty .Name)) }}\n  {{- $v = (list \"out\" .Scope .Name | join \"/\") }}\n{{- end }}\nbase64 -w0 {{ $v }}"
            }
          ],
          "debug": true,
          "output": "{\n  \"html\": \"{{ index (index . 1) \"result\" }}\"\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: showdownjs",
            "title": "Basic"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: showdownjs\n    image: direktiv/showdownjs\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Description for showdownjs",
    "title": "showdownjs",
    "version": "1.0.0",
    "x-direktiv-meta": {
      "category": "Unknown",
      "container": "direktiv/showdownjs",
      "issues": null,
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This is a longer description for the application showdownjs",
      "maintainer": null,
      "url": null
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Scope of the saved html output within the scope.",
                  "type": "string",
                  "example": "myhtml"
                },
                "scope": {
                  "description": "Scope of the saved html output. If empty result will be returned as base64.",
                  "type": "string",
                  "enum": [
                    "workflow",
                    "namespace",
                    "instance"
                  ],
                  "example": "instance"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "nice greeting",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "example": {
                "greeting": "Hello YourName"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "{{- $v := \"out.md\" }}\n{{- if and (not (empty .Scope)) (not (empty .Name)) }}\n  {{- $v = (list \"out\" .Scope .Name | join \"/\") }}\n{{- end }}\nshowdown makehtml --input input.md --output {{ $v }} \\\n  -c strikethrough \\\n  -c omitExtraWLInCodeBlocks \\\n  -c simplifiedAutoLink \\\n  -c literalMidWordUnderscores \\\n  -c tables \\\n  -c tablesHeaderId \\\n  -c ghCodeBlocks \\\n  -c tasklists \\\n  -c disableForced4SpacesIndentedSublists \\\n  -c simpleLineBreaks \\\n  -c requireSpaceBeforeHeadingText \\\n  -c ghCompatibleHeaderId \\\n  -c ghMentions \\\n  -c backslashEscapesHTMLTags \\\n  -c emoji \\\n  -c splitAdjacentBlockquotes "
            },
            {
              "action": "exec",
              "exec": "{{- $v := \"out.md\" }}\n{{- if and (not (empty .Scope)) (not (empty .Name)) }}\n  {{- $v = (list \"out\" .Scope .Name | join \"/\") }}\n{{- end }}\nbase64 -w0 {{ $v }}"
            }
          ],
          "debug": true,
          "output": "{\n  \"html\": \"{{ index (index . 1) \"result\" }}\"\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: showdownjs",
            "title": "Basic"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: showdownjs\n    image: direktiv/showdownjs\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
}
